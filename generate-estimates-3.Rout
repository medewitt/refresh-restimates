
R version 4.0.2 (2020-06-22) -- "Taking Off Again"
Copyright (C) 2020 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # Purpose: Run Estimation Routines
> 
> # packages ----------------------------------------------------------------
> library(EpiNow2)
> library(magrittr)
> library(data.table)
> library(future)
> library(purrr)

Attaching package: ‘purrr’

The following object is masked from ‘package:data.table’:

    transpose

The following object is masked from ‘package:magrittr’:

    set_names

The following object is masked from ‘package:EpiNow2’:

    update_list

> options(future.fork.multithreading.enable = FALSE)
> RhpcBLASctl::omp_set_num_threads(1L)
> data.table::setDTthreads(1)
> options(mc.cores = 8L)
> #options(future.globals.maxSize = 10000*1024^2)
> 
> dat <- nccovid::get_covid_county_plus()
Using: cone as the data source
Last date available: 2021-09-29
> 
> # Wait Until 15 Confirmed cases by county cumulative and within last 16 weeks
> 
> dat <- dat[date>=Sys.Date()-lubridate::weeks(12)]
> 
> dat <- dat[cases_confirmed_cum>15]
> 
> # Handle Excess zeros that likely don't exist
> dat <- dat[,cases_daily:= ifelse(cases_daily==0, rpois(1,1), cases_daily)]
> 
> # Fix State Data Dump
> dat <- dat[,cases_daily := fifelse(date==as.Date("2020-09-25"),
+                                    dplyr::lag(cases_daily,1), cases_daily), by = "county"]
> 
> dat[, n_tests_estimated := cases_daily/(percent_test_results_reported_positive_last_7_days/100) ]
> 
> dat[,n_tests_estimated:=round(n_tests_estimated)]
> 
> reported_cases <- dat[,`:=` (region=county,
+                              confirm = cases_daily)][,.(date,confirm, region, 
+                                                         percent_test_results_reported_positive_last_7_days,n_tests_estimated)][date>as.Date("2020-03-10")]
> 
> names(reported_cases) <- c("date", "confirm", "region", "pct_positive", "daily_test")
> 
> reported_cases <- tidyr::fill(reported_cases,c(pct_positive, daily_test),.direction = "down")
> 
> setDT(reported_cases)
> # correct for testing -----------------------------------------------------
> 
> first_case_dat <- dat[cases_daily>0, .SD[which.min(date)], by = county]
> 
> 
> first_case_dat <- first_case_dat[,.(county,date)] %>%
+   setnames(old = "date", new = "first_case_date")
> 
> # Set Keys for Joining
> setkey(first_case_dat, "county")
> setkey(dat, "county")
> 
> 
> dat <- dat[first_case_dat, nomatch = 0]
> 
> dat <- dat[date>=first_case_date]
> 
> increase_cases <- function (observed_cases, pos_rate, m = 2.5, k = 0) {
+   y <- observed_cases * pos_rate^k * m
+   return(y)
+ }
> 
> reported_cases$confirm <- increase_cases(observed_cases = reported_cases$confirm,
+                                          pos_rate = reported_cases$pct_positive)
> 
> reported_cases <- dat[,`:=` (region=county,
+                              confirm = round(confirm))] %>%
+   .[,.(date,confirm, region)] %>%
+   .[date>as.Date("2020-05-18")]
> 
> # pull low population density counties ------------------------------------
> 
> county_info <- nccovid::nc_population[ ,1:2][order(july_2020, decreasing = TRUE)][county!="STATE"]
> 
> county_single <- c(head(county_info$county,10), "North Carolina", "Cone Health")
> county_cumulative <- setdiff(county_info$county,county_single)
> 
> 
> 
> # Smooth on Regions for R estimation only.
> cone_region <- reported_cases[region %chin% nccovid::cone_region,
+                               .(confirm = sum(confirm)), by = "date"] %>%
+   .[,region:="Cone Health"] %>% 
+   .[,confirm:=data.table::frollmean(confirm, n = 3)] %>% 
+   .[,confirm :=round(confirm)]%>% 
+   .[!is.na(confirm)]
> 
> nc_overall <- reported_cases[,.(confirm = sum(confirm)), by = "date"] %>%
+   .[,region:="North Carolina"]%>% 
+   .[,confirm:=data.table::frollmean(confirm, n = 3)] %>% 
+   .[,confirm :=round(confirm)] %>% 
+   .[!is.na(confirm)]
> 
> reported_cases <-reported_cases %>%
+   merge(cone_region, all = TRUE) %>%
+   merge(nc_overall, all=TRUE)
> 
> # Correct for State Data Dump
> reported_cases <- reported_cases[ ,confirm:= fifelse(date==as.Date("2020-09-25"),
+                                                      shift(confirm,1),confirm), by = "region"]
> 
> 
> # pull low population density counties ------------------------------------
> 
> county_info <- nccovid::nc_population[ ,1:2][order(july_2020, decreasing = TRUE)][county!="STATE"]
> 
> county_single <- c(head(county_info$county,10), "North Carolina", "Cone Health")
> county_cumulative <- setdiff(county_info$county,county_single)
> 
> 
> # setup -------------------------------------------------------------------
> 
> # NCDHHS Reporting Data Starting 2020-10-29
> 
> reporting_delay <- nccovid::nc_delay
> 
> generation_time <- EpiNow2::get_generation_time(disease = "SARS-CoV-2", source = "ganyani")
> incubation_period <- EpiNow2::get_incubation_period(disease = "SARS-CoV-2", source = "lauer")
> 
> cat("prep completed")
prep completed> 
> # Load utils --------------------------------------------------------------
> if (!exists("setup_future", mode = "function")) source(here::here("util.R"))
> no_cores <- setup_future(reported_cases = reported_cases)
INFO [2021-09-29 22:54:34] Using 2 workers with 4 cores per worker
> 
> # run estimation ----------------------------------------------------------
> #EpiNow2::setup_logging(file = "log.log")
>   cat('Running the full model')
Running the full model> 
> range_values <- data.frame(county_cumulative)
> 
> range_values$n <- rep(1:5,each = 18)
> 
> permutes <- split(range_values, f = range_values$n)
> 
> for(i in seq_along(permutes)){
+   
+   try(regional_epinow(reported_cases = reported_cases[region %in% permutes[[i]]$county_cumulative],
+                                    generation_time = generation_time,
+                                    target_folder = here::here("rt-estimates-out"),
+                                    logs = here::here("epinow-logs"),
+                                    delays = delay_opts(incubation_period,
+                                                        reporting_delay),
+                                    non_zero_points = 14, horizon = 14, 
+                                    stan = stan_opts(init_fit = "cumulative",samples = 3000,
+                                                     chains = 4, cores = no_cores, control = list(adapt_delta = 0.95, max_treedepth = 14),
+                                                     max_execution_time = 60*60*6,
+                                                     future = FALSE),
+                                    rt = rt_opts(prior = list(mean = 1.25, sd = 0.25))))
+ }
INFO [2021-09-29 22:54:34] Producing following optional outputs: regions, summary, samples, plots, latest
Logging threshold set at INFO for the EpiNow2 logger
Writing EpiNow2 logs to the console and: /datadisk/refresh-restimates/epinow-logs/regional-epinow/2021-09-29.log
Logging threshold set at INFO for the EpiNow2.epinow logger
Writing EpiNow2.epinow logs to: /datadisk/refresh-restimates/epinow-logs/epinow/2021-09-29.log
INFO [2021-09-29 22:54:34] Reporting estimates using data up to: 2021-09-29
INFO [2021-09-29 22:54:34] Saving estimates to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-29 22:54:34] Producing estimates for: Craven, Onslow, Randolph, Moore, Alamance, Rowan, Harnett, Henderson, Robeson, Davidson, Orange, Wayne, Brunswick, Pitt, Catawba, Cabarrus, Iredell, Johnston
INFO [2021-09-29 22:54:34] Regions excluded: none
INFO [2021-09-29 23:53:53] Completed regional estimates
INFO [2021-09-29 23:53:53] Regions with estimates: 18
INFO [2021-09-29 23:53:53] Regions with runtime errors: 0
INFO [2021-09-29 23:53:53] Producing summary
INFO [2021-09-29 23:53:54] No summary directory specified so returning summary output
INFO [2021-09-29 23:53:54] Saving timings information to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-29 23:53:54] Producing following optional outputs: regions, summary, samples, plots, latest
Logging threshold set at INFO for the EpiNow2 logger
Writing EpiNow2 logs to the console and: /datadisk/refresh-restimates/epinow-logs/regional-epinow/2021-09-29.log
Logging threshold set at INFO for the EpiNow2.epinow logger
Writing EpiNow2.epinow logs to: /datadisk/refresh-restimates/epinow-logs/epinow/2021-09-29.log
INFO [2021-09-29 23:53:54] Reporting estimates using data up to: 2021-09-29
INFO [2021-09-29 23:53:54] Saving estimates to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-29 23:53:54] Producing estimates for: Carteret, Franklin, Haywood, Lee, Nash, Rockingham, Stanly, Surry, Wilkes, Caldwell, Rutherford, Chatham, Lincoln, Wilson, Burke, Cleveland, Sampson, Pender
INFO [2021-09-29 23:53:54] Regions excluded: none
INFO [2021-09-30 01:05:50] Completed regional estimates
INFO [2021-09-30 01:05:50] Regions with estimates: 18
INFO [2021-09-30 01:05:50] Regions with runtime errors: 0
INFO [2021-09-30 01:05:50] Producing summary
INFO [2021-09-30 01:05:50] No summary directory specified so returning summary output
INFO [2021-09-30 01:05:51] Saving timings information to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-30 01:05:51] Producing following optional outputs: regions, summary, samples, plots, latest
Logging threshold set at INFO for the EpiNow2 logger
Writing EpiNow2 logs to the console and: /datadisk/refresh-restimates/epinow-logs/regional-epinow/2021-09-29.log
Logging threshold set at INFO for the EpiNow2.epinow logger
Writing EpiNow2.epinow logs to: /datadisk/refresh-restimates/epinow-logs/epinow/2021-09-29.log
INFO [2021-09-30 01:05:51] Reporting estimates using data up to: 2021-09-29
INFO [2021-09-30 01:05:51] Saving estimates to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-30 01:05:51] Producing estimates for: Beaufort, Davie, Granville, Jackson, McDowell, Pasquotank, Stokes, Vance, Watauga, Duplin, Lenoir, Person, Richmond, Alexander, Edgecombe, Halifax, Hoke, Columbus
INFO [2021-09-30 01:05:51] Regions excluded: none
INFO [2021-09-30 02:16:20] Completed regional estimates
INFO [2021-09-30 02:16:20] Regions with estimates: 18
INFO [2021-09-30 02:16:20] Regions with runtime errors: 0
INFO [2021-09-30 02:16:20] Producing summary
INFO [2021-09-30 02:16:20] No summary directory specified so returning summary output
INFO [2021-09-30 02:16:21] Saving timings information to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-30 02:16:21] Producing following optional outputs: regions, summary, samples, plots, latest
Logging threshold set at INFO for the EpiNow2 logger
Writing EpiNow2 logs to the console and: /datadisk/refresh-restimates/epinow-logs/regional-epinow/2021-09-29.log
Logging threshold set at INFO for the EpiNow2.epinow logger
Writing EpiNow2.epinow logs to: /datadisk/refresh-restimates/epinow-logs/epinow/2021-09-29.log
INFO [2021-09-30 02:16:21] Reporting estimates using data up to: 2021-09-29
INFO [2021-09-30 02:16:21] Saving estimates to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-30 02:16:21] Producing estimates for: Anson, Ashe, Bladen, Caswell, Currituck, Greene, Hertford, Macon, Madison, Martin, Montgomery, Northampton, Polk, Transylvania, Yadkin, Dare, Scotland, Cherokee
INFO [2021-09-30 02:16:21] Regions excluded: none
INFO [2021-09-30 03:29:31] Completed regional estimates
INFO [2021-09-30 03:29:31] Regions with estimates: 18
INFO [2021-09-30 03:29:31] Regions with runtime errors: 0
INFO [2021-09-30 03:29:31] Producing summary
INFO [2021-09-30 03:29:31] No summary directory specified so returning summary output
INFO [2021-09-30 03:29:33] Saving timings information to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-30 03:29:33] Producing following optional outputs: regions, summary, samples, plots, latest
Logging threshold set at INFO for the EpiNow2 logger
Writing EpiNow2 logs to the console and: /datadisk/refresh-restimates/epinow-logs/regional-epinow/2021-09-29.log
Logging threshold set at INFO for the EpiNow2.epinow logger
Writing EpiNow2.epinow logs to: /datadisk/refresh-restimates/epinow-logs/epinow/2021-09-29.log
INFO [2021-09-30 03:29:33] Reporting estimates using data up to: 2021-09-29
INFO [2021-09-30 03:29:33] Saving estimates to : /datadisk/refresh-restimates/rt-estimates-out
INFO [2021-09-30 03:29:33] Producing estimates for: Alleghany, Avery, Bertie, Camden, Chowan, Clay, Gates, Graham, Hyde, Jones, Mitchell, Pamlico, Perquimans, Swain, Tyrrell, Washington, Yancey, Warren
INFO [2021-09-30 03:29:33] Regions excluded: none
INFO [2021-09-30 04:38:11] Completed regional estimates
INFO [2021-09-30 04:38:11] Regions with estimates: 18
INFO [2021-09-30 04:38:11] Regions with runtime errors: 0
INFO [2021-09-30 04:38:11] Producing summary
INFO [2021-09-30 04:38:11] No summary directory specified so returning summary output
INFO [2021-09-30 04:38:13] Saving timings information to : /datadisk/refresh-restimates/rt-estimates-out
> 
> proc.time()
     user    system   elapsed 
89082.268   282.187 20627.042 
